# USAGE: see class incremental YAML file
# NOTE: in domain incremental learning, the amount of classes per task does NOT change! --> set class incremental case[0] to False
# Break Point: after how many tasks a new domain is entered (represented by a shift to the noisy data). Break point should always be smaller than the amount of tasks.
logdir: logs
run_name: Example of DIL
#learning function parameters:
Which_learningfunction: ('Blanco', False)
Optimizer_and_Learning_Rate: tf.keras.optimizers.Adam(learning_rate=0.0001)
Loss_function: tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)
Number_of_epochs_per_task: 10
Test_images_per_task: 4
#task embeddings
Embedding_dimension_chunk_and_task_embeddings: 100
Use_a_seperate_task_embedding_model: True
Initialize_task_embedding_model_with_zero_bias_(True)_or_random_bias_(False): True
#target network
Which_Model: ('DRNN', False, 1)
Target_network_dimension: (200, 300)
Convolutional_layers: '[(8, (5, 5), 1), (16, (3, 3), 8), (32, (3, 3), 16)]'
A_final_trainable_soft_max_layer_in_the_target_network: True
Dropout_rate_in_target_network: 0.3
#hypernetwork
Number_of_chunks: 10 
Hypernetwork_dimension: (100, 50)
Number_of_classes: 2               
#others:
Class_Incremental_Case: (False, 0.5, 11, (True, 0.9), (6, 0.02), 0.4, 6)
L2_regularization_strenght: 0
Validation_accuracy: -0.1
Max_attempts_when_using_validation_accuracy: 1
Sampel_rate_sound_data: 16000
Testing_while_training: True
#parameters specific to Domain Incremental learning:
Amount_of_domain_shifts: 1
#parameters for running experiments
Add_results_to_previous_experiment_results: False
Visualize_results: True
